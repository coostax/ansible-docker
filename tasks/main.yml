---

- name: Install (Debian based)
  import_tasks: debian_install.yml
  when: ansible_facts['os_family'] == "Debian"

- name: Install (RedHat based)
  import_tasks: rhel_install.yml
  when: ansible_facts['os_family'] == "RedHat"

- name: Add user(s) to "docker" group
  user:
    name: "{{ item }}"
    groups: "docker"
    append: true
  loop: "{{ docker__users }}"

- name: Install python packages
  import_tasks: python_packages.yml

- name: Manage Docker registry login credentials
  docker_login:
    registry_url: "{{ item.registry_url | d(omit) }}"
    username: "{{ item.username }}"
    password: "{{ item.password }}"
    email: "{{ item.email | d(omit) }}"
    reauthorize: "{{ item.reauthorize | d(omit) }}"
    config_path: "{{ item.config_path | d(omit) }}"
    state: "{{ item.state | d('present') }}"
  loop: "{{ docker__registries }}"
  loop_control:
    label: '{{ {"registry_url": item.registry_url | d("https://index.docker.io/v1/"), "username": item.username, "state": item.state | d("present")} }}'
  when: item.username | d() and item.password | d()
  become: true
  become_user: "{{ docker__login_become_user | d('root') }}"
  vars:
    ansible_python_interpreter: "{{ docker__python_interpreter }}"

- name: Remove Docker related cron jobs
  file:
    path: "/etc/cron.d/{{ item.cron_file }}"
    state: "absent"
  loop: "{{ docker__cron_jobs }}"
  when:
    - item.state | d("present") == "absent"
    - item.cron_file | d()

- name: Create Docker related cron jobs
  cron:
    name: "{{ item.name }}"
    job: "{{ item.job }}"
    minute: "{{ item.schedule[0] }}"
    hour: "{{ item.schedule[1] }}"
    day: "{{ item.schedule[2] }}"
    month: "{{ item.schedule[3] }}"
    weekday: "{{ item.schedule[4] }}"
    cron_file: "{{ item.cron_file }}"
    user: "{{ item.user | d('root') }}"
  loop: "{{ docker__cron_jobs }}"
  when:
    - item.state | d("present") != "absent"
    - item.name | d() and item.job | d()
    - item.schedule | d() and item.cron_file | d()
